apply plugin: 'net.linguica.maven-settings'
apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = POM_ARTIFACT_ID

            pom.withXml {
                def root = asNode()
                root.appendNode('name', POM_NAME)
                root.appendNode('description', POM_DESCRIPTION)
                root.appendNode('url', POM_URL)

                def scm = root.appendNode('scm')
                scm.appendNode('url', POM_SCM_URL)
                scm.appendNode('connection', POM_SCM_CONNECTION)
                scm.appendNode('developerConnection', POM_SCM_DEV_CONNECTION)

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', POM_LICENCE_NAME)
                license.appendNode('url', POM_LICENCE_URL)
                license.appendNode('distribution', POM_LICENCE_DIST)

                def developers = root.appendNode('developers')
                def developer = developers.appendNode('developer')
                developer.appendNode('id', POM_DEVELOPER_ID)
                developer.appendNode('name', POM_DEVELOPER_NAME)

                developer = developers.appendNode('developer')
                developer.appendNode('id', POM_DEVELOPER2_ID)
                developer.appendNode('name', POM_DEVELOPER2_NAME)
            }

            def folder = new File("$buildDir/outputs/aar/")

            if(!folder.exists()){
                println "Output folder not found, skipping publish"
                return;
            }

            def files = new FileNameFinder().getFileNames(folder.absolutePath, "*-release.aar");

            if(files.size() == 0){
                println "No AAR file found, skipping publish"
                return;
            }

            artifact androidSourcesJar
            artifact androidJavadocsJar
            artifact files[0]
        }
    }

    repositories {
        maven {
            name "at.ac.ait.hbs.android"
            url "http://nexus.arcsmed.at/content/repositories/android/"
        }
    }
}

task androidJavadocs(type: Javadoc) {
    //source = android.sourceSets.main.allJava
    options {
        linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
    }
    source = android.sourceSets.main.java.sourceFiles
    //classpath += project.files(android.plugin.getRuntimeJarList().join(File.pathSeparator))
    classpath += project.files(project.android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    //basename = artifact_id
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    //basename = artifact_id
    //from android.sourceSets.main.allSource
    from android.sourceSets.main.java.sourceFiles
}